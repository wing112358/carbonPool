<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.carbonPool.dao.TransactionAssetsDao">

    <resultMap type="org.carbonPool.entity.TransactionAssets" id="TransactionAssetsMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="transactionId" column="transaction_id" jdbcType="INTEGER"/>
        <result property="assetsId" column="assets_id" jdbcType="INTEGER"/>
        <result property="assetsQuantity" column="assets_quantity" jdbcType="NUMERIC"/>
        <result property="price" column="price" jdbcType="NUMERIC"/>
        <result property="isDelete" column="is_delete" jdbcType="INTEGER"/>
        <result property="updatedAt" column="updated_at" jdbcType="TIMESTAMP"/>
        <result property="createdAt" column="created_at" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="TransactionAssetsMap">
        select
          id, transaction_id, assets_id, assets_quantity, price, is_delete, updated_at, created_at
        from transaction_assets
        where id = #{id}
    </select>


    <!--查询单个-->
    <select id="queryByTransactionId" resultMap="TransactionAssetsMap">
        select
            id, transaction_id, assets_id, assets_quantity, price, is_delete, updated_at, created_at
        from transaction_assets
        where transaction_id = #{transactionId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="TransactionAssetsMap">
        select
          id, transaction_id, assets_id, assets_quantity, price, is_delete, updated_at, created_at
        from transaction_assets
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="transactionId != null">
                and transaction_id = #{transactionId}
            </if>
            <if test="assetsId != null">
                and assets_id = #{assetsId}
            </if>
            <if test="assetsQuantity != null">
                and assets_quantity = #{assetsQuantity}
            </if>
            <if test="price != null">
                and price = #{price}
            </if>
            <if test="isDelete != null">
                and is_delete = #{isDelete}
            </if>
            <if test="updatedAt != null">
                and updated_at = #{updatedAt}
            </if>
            <if test="createdAt != null">
                and created_at = #{createdAt}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from transaction_assets
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="transactionId != null">
                and transaction_id = #{transactionId}
            </if>
            <if test="assetsId != null">
                and assets_id = #{assetsId}
            </if>
            <if test="assetsQuantity != null">
                and assets_quantity = #{assetsQuantity}
            </if>
            <if test="price != null">
                and price = #{price}
            </if>
            <if test="isDelete != null">
                and is_delete = #{isDelete}
            </if>
            <if test="updatedAt != null">
                and updated_at = #{updatedAt}
            </if>
            <if test="createdAt != null">
                and created_at = #{createdAt}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into transaction_assets(transaction_id, assets_id, assets_quantity, price, is_delete, updated_at, created_at)
        values (#{transactionId}, #{assetsId}, #{assetsQuantity}, #{price}, #{isDelete}, #{updatedAt}, #{createdAt})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into transaction_assets(transaction_id, assets_id, assets_quantity, price, is_delete, updated_at, created_at)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.transactionId}, #{entity.assetsId}, #{entity.assetsQuantity}, #{entity.price}, #{entity.isDelete}, #{entity.updatedAt}, #{entity.createdAt})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into transaction_assets(transaction_id, assets_id, assets_quantity, price, is_delete, updated_at, created_at)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.transactionId}, #{entity.assetsId}, #{entity.assetsQuantity}, #{entity.price}, #{entity.isDelete}, #{entity.updatedAt}, #{entity.createdAt})
        </foreach>
        on duplicate key update
        transaction_id = values(transaction_id),
        assets_id = values(assets_id),
        assets_quantity = values(assets_quantity),
        price = values(price),
        is_delete = values(is_delete),
        updated_at = values(updated_at),
        created_at = values(created_at)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update transaction_assets
        <set>
            <if test="transactionId != null">
                transaction_id = #{transactionId},
            </if>
            <if test="assetsId != null">
                assets_id = #{assetsId},
            </if>
            <if test="assetsQuantity != null">
                assets_quantity = #{assetsQuantity},
            </if>
            <if test="price != null">
                price = #{price},
            </if>
            <if test="isDelete != null">
                is_delete = #{isDelete},
            </if>
            <if test="updatedAt != null">
                updated_at = #{updatedAt},
            </if>
            <if test="createdAt != null">
                created_at = #{createdAt},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from transaction_assets where id = #{id}
    </delete>

</mapper>

